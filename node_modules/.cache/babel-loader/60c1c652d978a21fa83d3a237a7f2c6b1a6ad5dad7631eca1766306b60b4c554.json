{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import UniversityController from\"../controllers/UniversityController\";import Listing from\"../components/Listing\";import{jsx as _jsx}from\"react/jsx-runtime\";const ListingView=()=>{const[universities,setUniversities]=useState([]);const[searchTerm,setSearchTerm]=useState(\"\");const[sortOrder,setSortOrder]=useState(true);useEffect(()=>{const fetchData=async()=>{try{const data=await UniversityController.fetchUniversities();setUniversities(data);}catch(error){console.error(error.message);}};fetchData();},[]);const handleSearch=e=>{setSearchTerm(e.target.value);setUniversities(UniversityController.searchUniversities(e.target.value));};const handleSort=()=>{setSortOrder(!sortOrder);setUniversities(UniversityController.sortUniversities(sortOrder));};const handleDelete=name=>{setUniversities(UniversityController.deleteUniversity(name));};return/*#__PURE__*/_jsx(Listing,{universities:universities,searchTerm:searchTerm,onSearch:handleSearch,onSort:handleSort,onDelete:handleDelete});};export default ListingView;","map":{"version":3,"names":["React","useState","useEffect","UniversityController","Listing","jsx","_jsx","ListingView","universities","setUniversities","searchTerm","setSearchTerm","sortOrder","setSortOrder","fetchData","data","fetchUniversities","error","console","message","handleSearch","e","target","value","searchUniversities","handleSort","sortUniversities","handleDelete","name","deleteUniversity","onSearch","onSort","onDelete"],"sources":["/Users/tamm/work/universities-list-app/src/views/ListingView.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport UniversityController from \"../controllers/UniversityController\";\nimport Listing from \"../components/Listing\";\nimport University from \"../models/University\";\n\nconst ListingView: React.FC = () => {\n  const [universities, setUniversities] = useState<University[]>([]);\n  const [searchTerm, setSearchTerm] = useState<string>(\"\");\n  const [sortOrder, setSortOrder] = useState<boolean>(true);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const data = await UniversityController.fetchUniversities();\n        setUniversities(data);\n      } catch (error) {\n        console.error((error as Error).message);\n      }\n    };\n    fetchData();\n  }, []);\n\n  const handleSearch = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchTerm(e.target.value);\n    setUniversities(UniversityController.searchUniversities(e.target.value));\n  };\n\n  const handleSort = () => {\n    setSortOrder(!sortOrder);\n    setUniversities(UniversityController.sortUniversities(sortOrder));\n  };\n\n  const handleDelete = (name: string) => {\n    setUniversities(UniversityController.deleteUniversity(name));\n  };\n\n  return (\n    <Listing\n      universities={universities}\n      searchTerm={searchTerm}\n      onSearch={handleSearch}\n      onSort={handleSort}\n      onDelete={handleDelete}\n    />\n  );\n};\n\nexport default ListingView;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,oBAAoB,KAAM,qCAAqC,CACtE,MAAO,CAAAC,OAAO,KAAM,uBAAuB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAG5C,KAAM,CAAAC,WAAqB,CAAGA,CAAA,GAAM,CAClC,KAAM,CAACC,YAAY,CAAEC,eAAe,CAAC,CAAGR,QAAQ,CAAe,EAAE,CAAC,CAClE,KAAM,CAACS,UAAU,CAAEC,aAAa,CAAC,CAAGV,QAAQ,CAAS,EAAE,CAAC,CACxD,KAAM,CAACW,SAAS,CAAEC,YAAY,CAAC,CAAGZ,QAAQ,CAAU,IAAI,CAAC,CAEzDC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAY,SAAS,CAAG,KAAAA,CAAA,GAAY,CAC5B,GAAI,CACF,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAZ,oBAAoB,CAACa,iBAAiB,CAAC,CAAC,CAC3DP,eAAe,CAACM,IAAI,CAAC,CACvB,CAAE,MAAOE,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAEA,KAAK,CAAWE,OAAO,CAAC,CACzC,CACF,CAAC,CACDL,SAAS,CAAC,CAAC,CACb,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAM,YAAY,CAAIC,CAAsC,EAAK,CAC/DV,aAAa,CAACU,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAC7Bd,eAAe,CAACN,oBAAoB,CAACqB,kBAAkB,CAACH,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAC1E,CAAC,CAED,KAAM,CAAAE,UAAU,CAAGA,CAAA,GAAM,CACvBZ,YAAY,CAAC,CAACD,SAAS,CAAC,CACxBH,eAAe,CAACN,oBAAoB,CAACuB,gBAAgB,CAACd,SAAS,CAAC,CAAC,CACnE,CAAC,CAED,KAAM,CAAAe,YAAY,CAAIC,IAAY,EAAK,CACrCnB,eAAe,CAACN,oBAAoB,CAAC0B,gBAAgB,CAACD,IAAI,CAAC,CAAC,CAC9D,CAAC,CAED,mBACEtB,IAAA,CAACF,OAAO,EACNI,YAAY,CAAEA,YAAa,CAC3BE,UAAU,CAAEA,UAAW,CACvBoB,QAAQ,CAAEV,YAAa,CACvBW,MAAM,CAAEN,UAAW,CACnBO,QAAQ,CAAEL,YAAa,CACxB,CAAC,CAEN,CAAC,CAED,cAAe,CAAApB,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}